openapi: 3.0.0
info:
  title: Student Course Management API
  description: API for managing groups and students in the context of course management.
  version: x.x.x
servers:
- url: https://virtserver.swaggerhub.com/HEIJUNINHO2/Student-management-api/x.x.x
  description: SwaggerHub API Auto Mocking
paths:
  /groups:
    get:
      summary: Retrieve the list of groups
      parameters:
      - name: groupName
        in: query
        description: Filter by group name
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: groupYear
        in: query
        description: Filter by group year (date range)
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
      responses:
        "200":
          description: Successfully retrieved the list of groups
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
    put:
      summary: Update an existing group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "200":
          description: Group updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
    post:
      summary: Create a new group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        "201":
          description: Group created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
    delete:
      summary: Delete a group
      parameters:
      - name: id
        in: query
        description: ID of the group to delete
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Group deleted successfully
  /students:
    get:
      summary: Retrieve the list of students
      parameters:
      - name: studentName
        in: query
        description: Filter by student name
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Successfully retrieved the list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    put:
      summary: Update an existing student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        "200":
          description: Student updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    post:
      summary: Create a new student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
        required: true
      responses:
        "201":
          description: Student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
    delete:
      summary: Delete a student
      parameters:
      - name: id
        in: query
        description: ID of the student to delete
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "204":
          description: Student deleted successfully
components:
  schemas:
    Group:
      type: object
      properties:
        id:
          type: string
        groupName:
          type: string
        groupYear:
          type: string
          format: date
        promotion:
          type: string
          enum:
          - G
          - H
          - J
          - K
        studentNb:
          type: integer
        students:
          type: array
          items:
            $ref: '#/components/schemas/Student'
    Student:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          type: string
          enum:
          - M
          - F
        birthdate:
          type: string
          format: date
        reference:
          type: string
        group:
          type: string
